name: Backend smoke test (Windows)

on:
  push:
    branches: [ startup-eli5, main ]
  pull_request:
    branches: [ main ]

jobs:
  smoke:
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies (if package.json exists)
        shell: pwsh
        run: |
          if (Test-Path package.json) {
            npm ci
          } else {
            Write-Host 'No package.json present; skipping npm install.'
          }

      - name: Start server
        shell: pwsh
        run: |
          $env:PORT = 3001
          $env:LOG_DIR = (Join-Path (Get-Location).Path 'logs')
          if (-not (Test-Path $env:LOG_DIR)) { New-Item -ItemType Directory -Path $env:LOG_DIR | Out-Null }
          $proc = Start-Process -FilePath node -ArgumentList 'api-server.js' -PassThru
          echo "PID=$($proc.Id)" | Out-File -FilePath server.pid -Encoding ascii
          # wait for health
          $ok = $false
          for ($i=0; $i -lt 45; $i++) {
            try {
              $h = Invoke-RestMethod -UseBasicParsing -Uri "http://localhost:3001/api/health" -TimeoutSec 2
              if ($h -and ($h.ok -or (("" + $h.status) -eq 'ok'))) { $ok = $true; break }
            } catch {}
            Start-Sleep -Seconds 1
          }
          if (-not $ok) { Write-Error 'Server did not become healthy in time.' }

      - name: Run smoke test
        shell: pwsh
        run: |
          powershell -NoProfile -ExecutionPolicy Bypass -File scripts/smoke-test.ps1 -Port 3001

      - name: Stop server
        if: always()
        shell: pwsh
        run: |
          if (Test-Path server.pid) {
            $serverPid = Get-Content server.pid | ForEach-Object { ($_ -split '=')[1] }
            try { if ($serverPid) { Stop-Process -Id ([int]$serverPid) -Force } } catch {}
          }


